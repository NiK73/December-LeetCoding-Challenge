# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:

    def __init__(self, head: ListNode):
        self.head = head
        self.count = self.count(head)

    def count(self, node: ListNode) -> int:
        count = 1
        while node.next:
            node = node.next
            count += 1
        return count
        
    def getRandom(self) -> int: return self.get(random.randrange(self.count))
    
    def get(self, index: int) -> int:
        node = self.head
        for i in range(0,index):
            node = node.next
        return node.val


# Your Solution object will be instantiated and called as such:
# obj = Solution(head)
# param_1 = obj.getRandom()
